webpackHotUpdate("test",{

/***/ "./src/js/test.js":
/*!************************!*\
  !*** ./src/js/test.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_test_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/test.css */ \"./src/css/test.css\");\n/* harmony import */ var _css_test_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_test_css__WEBPACK_IMPORTED_MODULE_0__);\n// const extractImagesFromDom = () => {\n\n// }\n\n// const extractTextBlobsFromDom = () => {\n\n// }\n\n// // extractImagesFromDom() -> [{ src: 'http://toto.jpg', alt: 'toto' }, { ... } ]\n// // extractTextBlobsFromDom() -> [{ tag: 'p', content: 'lorem ispum', id: '25GF3' } , { ... } ]\n\n// const imgs = document.querySelectorAll( 'img' );\n// const src = [];\n// for( const i = imgs.length; i--; ) {\n//   src.push( img.src );\n// }\n\n\n\nfunction getImgAll (doc) {\n  return new Promise((resolve, reject) => {\n    loadImgAll(Array.from(searchDOM(doc)))\n      .then(resolve, reject)\n  })\n\nfunction searchDOM (doc) {\n  const srcChecker = /url\\(\\s*?['\"]?\\s*?(\\S+?)\\s*?[\"']?\\s*?\\)/i\n  return Array.from(doc.querySelectorAll('*'))\n    .reduce((collection, node) => {\n      // bg src\n      let prop = window.getComputedStyle(node, null)\n        .getPropertyValue('background-image')\n      // match `url(...)`\n      let match = srcChecker.exec(prop)\n      if (match) {\n        collection.add(match[1])\n      }\n\n      if (/^img$/i.test(node.tagName)) {\n        // src from img tag\n        collection.add(node.src)\n      } else if (/^frame$/i.test(node.tagName)) {\n        // iframe\n        try {\n          searchDOM(node.contentDocument || node.contentWindow.document)\n            .forEach(img => {\n              if (img) { collection.add(img) }\n            })\n        } catch (e) {}\n      }\n      return collection\n    }, new Set())\n  }\n\n  function loadImg (src, timeout = 500) {\n    var imgPromise = new Promise((resolve, reject) => {\n      let img = new Image()\n      img.onload = () => {\n        resolve({\n          src: src,\n          width: img.naturalWidth,\n          height: img.naturalHeight\n        })\n      }\n      img.onerror = reject\n      img.src = src\n    })\n    var timer = new Promise((resolve, reject) => {\n      setTimeout(reject, timeout)\n    })\n    return Promise.race([imgPromise, timer])\n  }\n\n  function loadImgAll (imgList, timeout = 500) {\n    return new Promise((resolve, reject) => {\n      Promise.all(\n        imgList\n          .map(src => loadImg(src, timeout))\n          .map(p => p.catch(e => false))\n      ).then(results => resolve(results.filter(r => r)))\n    })\n  }\n}\n\ngetImgAll(document).then(list => console.log(list))\ndocument.getElementsByTagName('img')[1].style.list.blur = \"url('https://img.lemde.fr/2019/08/23/0/0/2566/1957/688/0/60/0/acb7e16_-Qaaw0A000PExC6oHMED-zVK.jpg')\";\n\n\n\n\nconst blurOffensiveImages = (data) => {\n//   data => [{ src: \"https://img.lemde.fr/2019/08/23/0/0/2566/1957/688/0/60/0/acb7e16_-Qaaw0A000PExC6oHMED-zVK.jpg\"\n// , alert: true }]\n\n\n}\n\n\n// var beeCan = document.getElementById(\"bee\");\n// var beetx  = beeCan.getContext(\"2d\");\n// beetx.drawImage( src: 'https://img.lemde.fr/2019/08/23/0/0/2566/1957/688/0/60/0/acb7e16_-Qaaw0A000PExC6oHMED-zVK.jpg', 0, 0);\n// var blur   = 0;\n\n// blur       = Math.abs(_sliderF.getPosition(8, -8)); //this returns multiple values\n//                                                     //based on a new slider position\n\n// stackBlurCanvasRGB(\"bee\", 0, 0, beeCan.width, beeCan.height, blur);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvdGVzdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy90ZXN0LmpzPzViMWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3QgZXh0cmFjdEltYWdlc0Zyb21Eb20gPSAoKSA9PiB7XG5cbi8vIH1cblxuLy8gY29uc3QgZXh0cmFjdFRleHRCbG9ic0Zyb21Eb20gPSAoKSA9PiB7XG5cbi8vIH1cblxuLy8gLy8gZXh0cmFjdEltYWdlc0Zyb21Eb20oKSAtPiBbeyBzcmM6ICdodHRwOi8vdG90by5qcGcnLCBhbHQ6ICd0b3RvJyB9LCB7IC4uLiB9IF1cbi8vIC8vIGV4dHJhY3RUZXh0QmxvYnNGcm9tRG9tKCkgLT4gW3sgdGFnOiAncCcsIGNvbnRlbnQ6ICdsb3JlbSBpc3B1bScsIGlkOiAnMjVHRjMnIH0gLCB7IC4uLiB9IF1cblxuLy8gY29uc3QgaW1ncyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoICdpbWcnICk7XG4vLyBjb25zdCBzcmMgPSBbXTtcbi8vIGZvciggY29uc3QgaSA9IGltZ3MubGVuZ3RoOyBpLS07ICkge1xuLy8gICBzcmMucHVzaCggaW1nLnNyYyApO1xuLy8gfVxuaW1wb3J0IFwiLi4vY3NzL3Rlc3QuY3NzXCI7XG5cblxuZnVuY3Rpb24gZ2V0SW1nQWxsIChkb2MpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBsb2FkSW1nQWxsKEFycmF5LmZyb20oc2VhcmNoRE9NKGRvYykpKVxuICAgICAgLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KVxuICB9KVxuXG5mdW5jdGlvbiBzZWFyY2hET00gKGRvYykge1xuICBjb25zdCBzcmNDaGVja2VyID0gL3VybFxcKFxccyo/WydcIl0/XFxzKj8oXFxTKz8pXFxzKj9bXCInXT9cXHMqP1xcKS9pXG4gIHJldHVybiBBcnJheS5mcm9tKGRvYy5xdWVyeVNlbGVjdG9yQWxsKCcqJykpXG4gICAgLnJlZHVjZSgoY29sbGVjdGlvbiwgbm9kZSkgPT4ge1xuICAgICAgLy8gYmcgc3JjXG4gICAgICBsZXQgcHJvcCA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKG5vZGUsIG51bGwpXG4gICAgICAgIC5nZXRQcm9wZXJ0eVZhbHVlKCdiYWNrZ3JvdW5kLWltYWdlJylcbiAgICAgIC8vIG1hdGNoIGB1cmwoLi4uKWBcbiAgICAgIGxldCBtYXRjaCA9IHNyY0NoZWNrZXIuZXhlYyhwcm9wKVxuICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgIGNvbGxlY3Rpb24uYWRkKG1hdGNoWzFdKVxuICAgICAgfVxuXG4gICAgICBpZiAoL15pbWckL2kudGVzdChub2RlLnRhZ05hbWUpKSB7XG4gICAgICAgIC8vIHNyYyBmcm9tIGltZyB0YWdcbiAgICAgICAgY29sbGVjdGlvbi5hZGQobm9kZS5zcmMpXG4gICAgICB9IGVsc2UgaWYgKC9eZnJhbWUkL2kudGVzdChub2RlLnRhZ05hbWUpKSB7XG4gICAgICAgIC8vIGlmcmFtZVxuICAgICAgICB0cnkge1xuICAgICAgICAgIHNlYXJjaERPTShub2RlLmNvbnRlbnREb2N1bWVudCB8fCBub2RlLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQpXG4gICAgICAgICAgICAuZm9yRWFjaChpbWcgPT4ge1xuICAgICAgICAgICAgICBpZiAoaW1nKSB7IGNvbGxlY3Rpb24uYWRkKGltZykgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICAgIHJldHVybiBjb2xsZWN0aW9uXG4gICAgfSwgbmV3IFNldCgpKVxuICB9XG5cbiAgZnVuY3Rpb24gbG9hZEltZyAoc3JjLCB0aW1lb3V0ID0gNTAwKSB7XG4gICAgdmFyIGltZ1Byb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgaW1nID0gbmV3IEltYWdlKClcbiAgICAgIGltZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgIHNyYzogc3JjLFxuICAgICAgICAgIHdpZHRoOiBpbWcubmF0dXJhbFdpZHRoLFxuICAgICAgICAgIGhlaWdodDogaW1nLm5hdHVyYWxIZWlnaHRcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgIGltZy5vbmVycm9yID0gcmVqZWN0XG4gICAgICBpbWcuc3JjID0gc3JjXG4gICAgfSlcbiAgICB2YXIgdGltZXIgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBzZXRUaW1lb3V0KHJlamVjdCwgdGltZW91dClcbiAgICB9KVxuICAgIHJldHVybiBQcm9taXNlLnJhY2UoW2ltZ1Byb21pc2UsIHRpbWVyXSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRJbWdBbGwgKGltZ0xpc3QsIHRpbWVvdXQgPSA1MDApIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgUHJvbWlzZS5hbGwoXG4gICAgICAgIGltZ0xpc3RcbiAgICAgICAgICAubWFwKHNyYyA9PiBsb2FkSW1nKHNyYywgdGltZW91dCkpXG4gICAgICAgICAgLm1hcChwID0+IHAuY2F0Y2goZSA9PiBmYWxzZSkpXG4gICAgICApLnRoZW4ocmVzdWx0cyA9PiByZXNvbHZlKHJlc3VsdHMuZmlsdGVyKHIgPT4gcikpKVxuICAgIH0pXG4gIH1cbn1cblxuZ2V0SW1nQWxsKGRvY3VtZW50KS50aGVuKGxpc3QgPT4gY29uc29sZS5sb2cobGlzdCkpXG5kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaW1nJylbMV0uc3R5bGUubGlzdC5ibHVyID0gXCJ1cmwoJ2h0dHBzOi8vaW1nLmxlbWRlLmZyLzIwMTkvMDgvMjMvMC8wLzI1NjYvMTk1Ny82ODgvMC82MC8wL2FjYjdlMTZfLVFhYXcwQTAwMFBFeEM2b0hNRUQtelZLLmpwZycpXCI7XG5cblxuXG5cbmNvbnN0IGJsdXJPZmZlbnNpdmVJbWFnZXMgPSAoZGF0YSkgPT4ge1xuLy8gICBkYXRhID0+IFt7IHNyYzogXCJodHRwczovL2ltZy5sZW1kZS5mci8yMDE5LzA4LzIzLzAvMC8yNTY2LzE5NTcvNjg4LzAvNjAvMC9hY2I3ZTE2Xy1RYWF3MEEwMDBQRXhDNm9ITUVELXpWSy5qcGdcIlxuLy8gLCBhbGVydDogdHJ1ZSB9XVxuXG5cbn1cblxuXG4vLyB2YXIgYmVlQ2FuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiZWVcIik7XG4vLyB2YXIgYmVldHggID0gYmVlQ2FuLmdldENvbnRleHQoXCIyZFwiKTtcbi8vIGJlZXR4LmRyYXdJbWFnZSggc3JjOiAnaHR0cHM6Ly9pbWcubGVtZGUuZnIvMjAxOS8wOC8yMy8wLzAvMjU2Ni8xOTU3LzY4OC8wLzYwLzAvYWNiN2UxNl8tUWFhdzBBMDAwUEV4QzZvSE1FRC16VksuanBnJywgMCwgMCk7XG4vLyB2YXIgYmx1ciAgID0gMDtcblxuLy8gYmx1ciAgICAgICA9IE1hdGguYWJzKF9zbGlkZXJGLmdldFBvc2l0aW9uKDgsIC04KSk7IC8vdGhpcyByZXR1cm5zIG11bHRpcGxlIHZhbHVlc1xuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vYmFzZWQgb24gYSBuZXcgc2xpZGVyIHBvc2l0aW9uXG5cbi8vIHN0YWNrQmx1ckNhbnZhc1JHQihcImJlZVwiLCAwLCAwLCBiZWVDYW4ud2lkdGgsIGJlZUNhbi5oZWlnaHQsIGJsdXIpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/test.js\n");

/***/ })

})
webpackHotUpdate("test",{

/***/ "./src/js/test.js":
/*!************************!*\
  !*** ./src/js/test.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nfunction getImgAll (doc) {\n  return new Promise((resolve, reject) => {\n    loadImgAll(Array.from(searchDOM(doc)))\n      .then(resolve, reject)\n  })\n\nfunction searchDOM (doc) {\n  const srcChecker = /url\\(\\s*?['\"]?\\s*?(\\S+?)\\s*?[\"']?\\s*?\\)/i\n  return Array.from(doc.querySelectorAll('*'))\n    .reduce((collection, node) => {\n      // bg src\n      let prop = window.getComputedStyle(node, null)\n        .getPropertyValue('background-image')\n      // match `url(...)`\n      let match = srcChecker.exec(prop)\n      if (match) {\n        collection.add(match[1])\n      }\n\n      if (/^img$/i.test(node.tagName)) {\n        // src from img tag\n        collection.add(node.src)\n      } else if (/^frame$/i.test(node.tagName)) {\n        // iframe\n        try {\n          searchDOM(node.contentDocument || node.contentWindow.document)\n            .forEach(img => {\n              if (img) { collection.add(img) }\n            })\n        } catch (e) {}\n      }\n      return collection\n    }, new Set())\n  }\n\n  function loadImg (src, timeout = 500) {\n    var imgPromise = new Promise((resolve, reject) => {\n      let img = new Image()\n      img.onload = () => {\n        resolve(src)\n      }\n      img.onerror = reject\n      img.src = src\n    })\n    var timer = new Promise((resolve, reject) => {\n      setTimeout(reject, timeout)\n    })\n    return Promise.race([imgPromise, timer])\n  }\n\n  function loadImgAll (imgList, timeout = 500) {\n    return new Promise((resolve, reject) => {\n      Promise.all(\n        imgList\n          .map(src => loadImg(src, timeout))\n          .map(p => p.catch(e => false))\n      ).then(results => resolve(results.filter(r => r)))\n    })\n  }\n}\n\n//  getImgAll(document).then(list => {\n//     const dataToSend = {\n//       urls: list,\n//       keywords: ['spider', 'snake']\n//       // à modif en key value , pas sûr de la forme du tableau\n//     };\n//     console.log(dataToSend);\n//     // console.log(\"je dois envoyer cette liste a rails\")\n\n\n//     const url = 'http://localhost:3000/fake';\n\n//     fetch(url, {\n//       method: 'POST', // or 'PUT'\n//       body: JSON.stringify(dataToSend) // data can be `string` or {object}!\n//     }).then(res => res.json())\n//     .then(response => console.log('Success:', JSON.stringify(response)))\n//     .catch(error => console.error('Error:', error));\n//   }\n// );\n\n\n\nconst url = 'http://localhost:3000/fake';\n\nfetch(url, {\n  method: 'POST', // or 'PUT'\n  body: JSON.stringify({toto: \"titi\"}) // data can be `string` or {object}!\n}).then(res => res.json())\n.then(response => console.log('Success:', JSON.stringify(response)))\n.catch(error => console.error('Error:', error));\n\n\n\n\n\n\n\n\nconst GetUrlKeywordsToRails = (requests) => {\n  requests.forEach(function (data) {\n    if (data.keywords === 'spider') {\n      // console.log(data);\n      // console.log(`img[srcset=\"${data.src}\"]`);\n      // console.log(document.querySelector(`img[srcset=\"${data.src}\"]`));\n      document.querySelector(`img[srcset=\"${data.src}\"]`);\n    }\n  });\n\n  // console.log(request);\n};\n\n\nconst requests = [\n  { src: \"https://i.f1g.fr/media/figaro/375x210_crop/2016/07/08/XVM99245fcc-445d-11e6-b592-d337671c6a4c.jpg 375w, https://i.f1g.fr/media/figaro/680x382_crop/2016/07/08/XVM99245fcc-445d-11e6-b592-d337671c6a4c.jpg 680w\", keywords: 'spider' },\n  { src: \"https://i.f1g.fr/media/figaro/300x200/2016/07/08/XVM9dff23ec-4381-11e6-aedb-9ff89248825a-300x200.jpg\", keywords: false },\n  { src: \"https://i.f1g.fr/media/eidos/52x52_crop/2019/08/23/XVMfcc0d604-b1e3-11e9-a562-34c2d8c63b1e.jpg\", keywords: 'spider' },\n  { src: \"https://i.f1g.fr/media/eidos/52x52_crop/2019/08/22/XVM8ff88140-c28f-11e9-9a20-eddc30b21241.jpg\", keywords: false }\n]\n\n\nGetUrlKeywordsToRails(requests);\n\n\n\n\n\n// const blurOffensiveImages = (responses) => {\n//   responses.forEach(function (data) {\n//     if (data.alert) {\n//       console.log(data);\n//       // console.log(`img[srcset=\"${data.src}\"]`);\n//       // console.log(document.querySelector(`img[srcset=\"${data.src}\"]`));\n//       document.querySelector(`img[srcset=\"${data.src}\"]`).style.filter = 'blur(40px)';\n//     }\n//   });\n\n//   // console.log(responses);\n// };\n\n\n// const responses = [\n//   { src: \"https://i.f1g.fr/media/figaro/375x210_crop/2016/07/08/XVM99245fcc-445d-11e6-b592-d337671c6a4c.jpg 375w, https://i.f1g.fr/media/figaro/680x382_crop/2016/07/08/XVM99245fcc-445d-11e6-b592-d337671c6a4c.jpg 680w\", alert: true },\n//   { src: \"https://i.f1g.fr/media/figaro/300x200/2016/07/08/XVM9dff23ec-4381-11e6-aedb-9ff89248825a-300x200.jpg\", alert: false },\n//   { src: \"https://i.f1g.fr/media/eidos/52x52_crop/2019/08/23/XVMfcc0d604-b1e3-11e9-a562-34c2d8c63b1e.jpg\", alert: true },\n//   { src: \"https://i.f1g.fr/media/eidos/52x52_crop/2019/08/22/XVM8ff88140-c28f-11e9-9a20-eddc30b21241.jpg\", alert: false }\n// ]\n\n\n// blurOffensiveImages(responses);\n\n\n\n\n// Images\n// Analyse img du DOM -> [ { }, { }]\n// Envoie les img au serveur\n// Le serveur repond -> [{ ... alert: true }, { ... alert: false }]\n// On envoie la response du serveur a la méthode blurOffensiveImages\n// Cette méthode itere sur la reponse du serveur et floute l'image qui correspond si la clef alert vaut true\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/test.js\n");

/***/ })

})